package com.flight.trs.model.entity;
// Generated 2016-1-16 17:01:14 by Hibernate Tools 4.3.1.Final

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.flight.trs.model.IDeleteNotPhysically;

/**
 * Carrier generated by hbm2java
 */
@Entity
@Table(name = "TRS_CARRIER"
	, uniqueConstraints = { 
		@UniqueConstraint(columnNames = "TICKET_CODE"),
		@UniqueConstraint(columnNames = "NAME") 
	}
)
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
@JsonAutoDetect(fieldVisibility=JsonAutoDetect.Visibility.ANY)
@JsonIgnoreProperties({"serialVersionUID","spell","ticketCode","isDeleted","passengerGauges"})
public class Carrier implements java.io.Serializable 
	, IDeleteNotPhysically{

	/** 
	 * @Fields serialVersionUID : TODO
	 */ 
	private static final long serialVersionUID = -1607638951759583694L;
	private String code;
	private String name;
	private String spell;
	private String ticketCode;
	private char isDeleted = 'n';
	private List<PassengerGauge> passengerGauges = new ArrayList<PassengerGauge>();

	public Carrier() {
	}

	public Carrier(String code, String name, String ticketCode) {
		this.code = code;
		this.name = name;
		this.ticketCode = ticketCode;
	}

	public Carrier(String code, String name, String spell, String ticketCode) {
		this.code = code;
		this.name = name;
		this.spell = spell;
		this.ticketCode = ticketCode;
	}
	
	public Carrier(String code, String name, String spell, String ticketCode, List<PassengerGauge> passengerGauges) {
		this.code = code;
		this.name = name;
		this.spell = spell;
		this.ticketCode = ticketCode;
		this.passengerGauges = passengerGauges;
	}

	@Id

	@Column(name = "CODE", unique = true, nullable = false, length = 2)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "NAME", unique = true, nullable = false, length = 24)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "SPELL", length = 32)
	public String getSpell() {
		return this.spell;
	}

	public void setSpell(String spell) {
		this.spell = spell;
	}

	@Column(name = "TICKET_CODE", unique = true, nullable = false, length = 3)
	public String getTicketCode() {
		return this.ticketCode;
	}

	public void setTicketCode(String ticketCode) {
		this.ticketCode = ticketCode;
	}

	@Column(name = "IS_DELETED", nullable = false, length = 1)
	@JsonIgnore
	public char getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(char isDeleted) {
		this.isDeleted = isDeleted;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "carrier")
	@OrderBy("id.clCode desc")
	@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
	@JsonIgnore
	public List<PassengerGauge> getPassengerGauges() {
		return this.passengerGauges;
	}

	public void setPassengerGauges(List<PassengerGauge> passengerGauges) {
		this.passengerGauges = passengerGauges;
	}

	@Transient
	@Override
	public void deleteNotPhysically() {
		// TODO
		setIsDeleted('y');
	}
}

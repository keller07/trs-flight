package com.flight.trs.model.entity;
//Generated 2016-1-16 17:01:14 by Hibernate Tools 4.3.1.Final

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonUnwrapped;

/**
* PassengerGauge generated by hbm2java
*/
@Entity
@Table(name = "TRS_FREIGHT_RATE")
//@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
@JsonAutoDetect(fieldVisibility=JsonAutoDetect.Visibility.ANY)
@JsonIgnoreProperties({"serialVersionUID"})
public class FreightRate 
	implements java.io.Serializable {

	/** 
	 * @Fields serialVersionUID : TODO
	 */ 
	private static final long serialVersionUID = 1661077839520088339L;
	@JsonUnwrapped
	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "flightNo", column = @Column(name = "FLIGHT_NO", nullable = false, length = 6) ),
			@AttributeOverride(name = "depAirportCode", column = @Column(name = "DEP_AIRPORT_CODE", nullable = false, length = 3) ) ,
			@AttributeOverride(name = "arrAirportCode", column = @Column(name = "ARR_AIRPORT_CODE", nullable = false, length = 3) ) ,
			@AttributeOverride(name = "depDate", column = @Column(name = "DEP_DATE", nullable = false, length = 8) )})
	private FreightRateId id;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DEP_AIRPORT_CODE", nullable = false, insertable=false, updatable = false)
	private Airport depAirport;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ARR_AIRPORT_CODE", nullable = false, insertable=false, updatable = false)
	private Airport arrAirport;
	
	@Column(name = "TICKET_FEE", nullable = false, precision = 6, scale = 0)
	private short ticketFee;
	
	@Column(name = "AIRPORT_TAX", nullable = false, precision = 4, scale = 0)
	private short airportTax;
	
	@Column(name = "BAF", nullable = false, precision = 4, scale = 0)
	private short baf;
	
	@Temporal(TemporalType.TIME)
	@Column(name = "UPDATE_TIME", nullable = false, length = 18)
	private Date updateTime;

	public FreightRate() {
	}

	public FreightRate(FreightRateId id, short ticketFee, short airportTax, short baf, Date updateTime) {
		super();
		this.id = id;
		this.ticketFee = ticketFee;
		this.airportTax = airportTax;
		this.baf = baf;
		this.updateTime = updateTime;
	}

	public FreightRateId getId() {
		return id;
	}

	public void setId(FreightRateId id) {
		this.id = id;
	}

	public Airport getDepAirport() {
		return depAirport;
	}

	public void setDepAirport(Airport depAirport) {
		this.depAirport = depAirport;
	}

	public Airport getArrAirport() {
		return arrAirport;
	}

	public void setArrAirport(Airport arrAirport) {
		this.arrAirport = arrAirport;
	}

	public short getTicketFee() {
		return ticketFee;
	}

	public void setTicketFee(short ticketFee) {
		this.ticketFee = ticketFee;
	}

	public short getAirportTax() {
		return airportTax;
	}

	public void setAirportTax(short airportTax) {
		this.airportTax = airportTax;
	}

	public short getBaf() {
		return baf;
	}

	public void setBaf(short baf) {
		this.baf = baf;
	}

	public Date getUpdateTime() {
		return updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

}

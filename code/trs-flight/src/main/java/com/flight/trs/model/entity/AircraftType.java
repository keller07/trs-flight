package com.flight.trs.model.entity;
// Generated 2016-1-16 17:01:14 by Hibernate Tools 4.3.1.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.flight.trs.model.IDeleteNotPhysically;

/**
 * AircraftType generated by hbm2java
 */

@Entity
@Table(name = "TRS_AIRCRAFT_TYPE")
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
@JsonAutoDetect(fieldVisibility=JsonAutoDetect.Visibility.ANY)
@JsonIgnoreProperties({"serialVersionUID","spell","isDeleted"})
public class AircraftType implements java.io.Serializable 
	, IDeleteNotPhysically{

	/** 
	 * @Fields serialVersionUID : TODO
	 */ 
	private static final long serialVersionUID = -5259175505667683806L;
	private String code;
	private String name;
	private String spell;
	private char isDeleted = 'n';

	public AircraftType() {
	}

	public AircraftType(String code, String name) {
		this.code = code;
		this.name = name;
	}

	public AircraftType(String code, String name, String spell) {
		this.code = code;
		this.name = name;
		this.spell = spell;
	}

	@Id

	@Column(name = "CODE", unique = true, nullable = false, length = 3)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "NAME", nullable = false, length = 36)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "SPELL", length = 32)
	public String getSpell() {
		return this.spell;
	}

	public void setSpell(String spell) {
		this.spell = spell;
	}

	@Column(name = "IS_DELETED", nullable = false, length = 1)
	@JsonIgnore
	public char getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(char isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Transient
	@Override
	public void deleteNotPhysically() {
		// TODO
		setIsDeleted('y');
	}
}
